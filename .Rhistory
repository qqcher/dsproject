library(devtools)
library(roxygen2)
library(pkgdown)
library(docthis)
library(dsproject)
docthis
devtools::document(roclets = c('rd', 'collate', 'namespace'))
document()
use_vignette("dsproject")
use_mit_license()
use_mit_license(dsproject.Rproj)
usethis::use_mit_license
use_mit_license(name = find_name())
use_mit_license(name = "Cher Qin")
import <- function(file, ...){
# if no file specified, prompt user
if(missing(file))
file <- file.choose()
# get file info
file <- tolower(file)
basename <- basename(file)
extension <- tools::file_ext(file)
# import dataset
df <- switch(extension,
"sas7bdat" = haven::read_sas(file, ...),
"dta" = haven::read_stata(file, ...),
"sav" = haven::read_spss(file, ...),
"xlsx" = readxl::read_excel(file, ...),
"xls" = readxl::read_excel(file, ...),
vroom::vroom(file, ...)
)
# return data frame
return(df)
}
make_project <- function (project,
path = getwd(),
folders = c("figures", "documentation",
"data", "reports", "R"),
readme = "README.md",
git = FALSE) {
# change to path location
if(!dir.exists(path)) stop("No such path")
setwd(path)
# project directory
if(!missing(project)) {
dir.create(project)
setwd(project)
}
# create subdirectories
for (i in folders){
dir.create(i)
}
# create README.md
today <- Sys.Date()
user  <- Sys.info()[["user"]]
project <- basename(getwd())
cat("# Project: ", project, "\n\n",
"## Author: ", user, "\n\n",
"## Date: ",   format(today, format="%B %d %Y"), "\n\n",
"## Purpose: \n\n",
"## Data Sources: \n\n",
"## Stakeholders: \n\n",
file = readme,
sep = "")
# create RStudio project
usethis::create_project(".", open=FALSE)
# add git
if (git){
usethis::use_git()
}
# activate project
usethis::proj_activate(".")
}
use <- function(pkg) {
pkg <- as.character(substitute(pkg))
if (!suppressWarnings(require(pkg, character.only = TRUE))) {
msg <- paste("Install package", pkg, "(y/n)? ")
answer <- readline(msg)
answer <- substr(tolower(trimws(answer)), 1, 1)
if (answer == "y") {
install.packages(pkg)
require(pkg, character.only = TRUE)
} else {
msg <- paste("Package", pkg, "not loaded.")
message(msg)
}
}
}
usethis::use_mit_license(name = "Cher Qin")
today <- Sys.Date()
user  <- Sys.info()[["user"]]
project <- basename(getwd())
cat("# Project: ", project, "\n\n",
"## Author: ", user, "\n\n",
"## Date: ",   format(today, format="%B %d %Y"), "\n\n",
"## Purpose: \n\n",
"## Data Sources: \n\n",
"## Stakeholders: \n\n",
file = readme,
sep = "")
dir.create("README.md")
file_create("README.md")
file.create("README.md")
today <- Sys.Date()
user  <- Sys.info()[["user"]]
project <- basename(getwd())
cat("# Project: ", project, "\n\n",
"## Author: ", user, "\n\n",
"## Date: ",   format(today, format="%B %d %Y"), "\n\n",
"## Purpose: \n\n",
"## Data Sources: \n\n",
"## Stakeholders: \n\n",
file = readme,
sep = "")
today <- Sys.Date()
user  <- Sys.info()[["user"]]
project <- basename(getwd())
cat("# Project: ", project, "\n\n",
"## Author: ", user, "\n\n",
"## Date: ",   format(today, format="%B %d %Y"), "\n\n",
"## Purpose: \n\n",
"## Data Sources: \n\n",
"## Stakeholders: \n\n",
file = "README.md",
sep = "")
getwd()
library(pkg)
library(pkgdown)
build_site()
build_site()
build_site()
#' @param readme a character string of the title of the markdown file
#' @param git a boolean value indicating whether to initialize a Git repository
#' and adds important files to .gitignore. The default is set to FALSE.
#'
#' @import usethis
#' @export
#' @return no value is returned
#' @author Cher Qin <qqin@@wesleyan.edu>
#' @examples
#' # make_project("example", path = "/Desktop/example")
make_project <- function (project,
path = getwd(),
folders = c("figures", "documentation",
"data", "reports", "R"),
readme = "README.md",
git = FALSE) {
# change to path location
if(!dir.exists(path)) stop("No such path")
setwd(path)
# project directory
if(!missing(project)) {
dir.create(project)
setwd(project)
}
# create subdirectories
for (i in folders){
dir.create(i)
}
# create README.md
today <- Sys.Date()
user  <- Sys.info()[["user"]]
project <- basename(getwd())
cat("# Project: ", project, "\n\n",
"## Author: ", user, "\n\n",
"## Date: ",   format(today, format="%B %d %Y"), "\n\n",
"## Purpose: \n\n",
"## Data Sources: \n\n",
"## Stakeholders: \n\n",
file = "README.md",
sep = "")
# create RStudio project
usethis::create_project(".", open=FALSE)
# add git
if (git){
usethis::use_git()
}
# activate project
usethis::proj_activate(".")
}
make_project("example", path = "~/Desktop")
buibuild_site()
build_site()
build_site()
build_site()
library(dsproject)
library(dsproject)
build_site()
git remote add origin https://github.com/qqcher/dsproject.git
git push â€“u origin master
library(pkgdown)
bbuild_site()
build_site()
